{"version":3,"sources":["pages/SectionUbiquitousLanguage.js","pages/SectionDomainDrivenDesign.js","pages/Section1.js","pages/SectionLayeredArchitecture.js","pages/SectionEntities.js","pages/SectionValueObjects.js","pages/SectionServices.js","pages/SectionModules.js","pages/SectionAggregates.js","pages/SectionFactories.js","pages/SectionRepositories.js","pages/Section2.js","pages/SectionSpecification.js","pages/SectionIntentionRevealingInterfaces.js","pages/SectionSideEffectFreeFunctions.js","pages/SectionAssertions.js","pages/SectionConceptualContours.js","pages/SectionStandaloneClasses.js","pages/SectionCompositeOfDesignPattern.js","pages/Section3.js","pages/SectionBoundedContext.js","pages/SectionContinuousIntegration.js","pages/SectionContextMap.js","pages/SectionSharedKernel.js","pages/SectionCostomerSupplierDevelopmentTeams.js","pages/SectionConformist.js","pages/SectionAntiCorruptionLayer.js","pages/SectionSeparateWays.js","pages/SectionOpenHostService.js","pages/SectionPublishedLanguage.js","pages/SectionCoreDomain.js","pages/SectionGenericSubDomains.js","pages/SectionDomainVisionStatement.js","pages/SectionHighlightedCore.js","pages/SectionCohesiveMechanisms.js","pages/SectionSegregatedCore.js","pages/SectionAbstractCore.js","pages/SectionEvolvingOrder.js","pages/SectionSystemMetaphor.js","pages/SectionResponsibleityLayers.js","pages/SectionKnowledgeLevel.js","pages/SectionPluggableComponentFramework.js","pages/Section4.js","pages/PageHome.js","App.js","serviceWorker.js","index.js"],"names":["SectionUbiquitousLanguage","className","SectionDomainDrivenDesign","Section1","SectionLayeredArchitecture","SectionEntities","SectionValueObjects","SectionServices","SectionModules","SectionAggregates","SectionFactories","SectionRepositories","Section2","SectionSpecification","SectionIntentionRevealingInterfaces","SectionSideEffectFreeFunctions","SectionAssertions","SectionConceptualContours","SectionStandaloneClasses","SectionCompositeOfDesignPattern","Section3","SectionBoundedContext","SectionContinuousIntegration","SectionContextMap","SectionSharedKernel","SectionCostomerSupplierDevelopmentTeams","SectionConformist","SectionAntiCorruptionLayer","SectionSeparateWays","SectionOpenHostService","SectionPublishedLanguage","SectionCoreDomain","SectionGenericSubDomains","SectionDomainVisionStatement","SectionHighlightedCore","SectionCohesiveMechanisms","SectionSegregatedCore","SectionAbstractCore","SectionEvolvingOrder","SectionSystemMetaphor","SectionResponsibleityLayers","SectionKnowledgeLevel","SectionPluggableComponentFramework","Section4","PageHome","licenseKey","scrollingSpeed","render","state","fullpageApi","Wrapper","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6PAWeA,MATf,WACE,OACI,yBAAKC,UAAU,WACb,yEACA,oDCKOC,MATf,WACI,OACI,yBAAKD,UAAU,WACb,+EACA,qDCaKE,MATf,WACI,OACI,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCHKC,MATf,WACI,OACI,yBAAKH,UAAU,WACb,uGACA,qDCKKI,MATf,WACI,OACI,yBAAKJ,UAAU,WACb,mEACA,yCCKKK,MATf,WACI,OACI,yBAAKL,UAAU,WACb,yEACA,8CCKKM,MATf,WACI,OACI,yBAAKN,UAAU,WACb,uDACA,yCCKKO,MATf,WACI,OACI,yBAAKP,UAAU,WACb,6DACA,wCCKKQ,MATf,WACI,OACI,yBAAKR,UAAU,WACb,2CACA,2CCKKS,MATf,WACI,OACI,yBAAKT,UAAU,WACb,6DACA,0CCKKU,MATf,WACI,OACI,yBAAKV,UAAU,WACb,6DACA,6CC2BKW,MAff,WACI,OACI,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCjBKC,MATf,WACI,OACI,yBAAKZ,UAAU,WACb,2CACA,8CCKKa,MATf,WACI,OACI,yBAAKb,UAAU,WACb,mHACA,+DCKKc,MATf,WACI,OACI,yBAAKd,UAAU,WACb,+EACA,2DCKKe,MATf,WACI,OACI,yBAAKf,UAAU,WACb,2CACA,2CCKKgB,MATf,WACI,OACI,yBAAKhB,UAAU,WACb,6DACA,oDCKKiB,MATf,WACI,OACI,yBAAKjB,UAAU,WACb,yEACA,mDCKKkB,MATf,WACI,OACI,yBAAKlB,UAAU,WACb,mEACA,4DC+BKmB,MAlBf,WACI,OACI,oCACE,kBAAC,EAAD,MAGA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MAGA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCrBKC,MATf,WACI,OACI,yBAAKpB,UAAU,WACb,6GACA,gDCKKqB,MATf,WACI,OACI,yBAAKrB,UAAU,WACb,mEACA,uDCKKsB,MATf,WACI,OACI,yBAAKtB,UAAU,WACb,2FACA,4CCKKuB,MATf,WACI,OACI,yBAAKvB,UAAU,WACb,mEACA,8CCKKwB,MATf,WACI,OACI,yBAAKxB,UAAU,WACb,kGACA,sECKKyB,MATf,WACI,OACI,yBAAKzB,UAAU,WACb,iDACA,2CCKK0B,MATf,WACI,OACI,yBAAK1B,UAAU,WACb,6DACA,sDCKK2B,MATf,WACI,OACI,yBAAK3B,UAAU,WACb,uDACA,8CCKK4B,MATf,WACI,OACI,yBAAK5B,UAAU,WACb,qFACA,kDCKK6B,MATf,WACI,OACI,yBAAK7B,UAAU,WACb,yEACA,mDCKK8B,MATf,WACI,OACI,yBAAK9B,UAAU,WACb,yEACA,4CCKK+B,MATf,WACI,OACI,yBAAK/B,UAAU,WACb,+EACA,mDCKKgC,MATf,WACI,OACI,yBAAKhC,UAAU,WACb,uGACA,wDCKKiC,MATf,WACI,OACI,yBAAKjC,UAAU,WACb,yEACA,iDCKKkC,MATf,WACI,OACI,yBAAKlC,UAAU,WACb,2FACA,oDCKKmC,MATf,WACI,OACI,yBAAKnC,UAAU,WACb,yEACA,gDCKKoC,MATf,WACI,OACI,yBAAKpC,UAAU,WACb,+EACA,8CCKKqC,MATf,WACI,OACI,yBAAKrC,UAAU,WACb,mEACA,+CCKKsC,MATf,WACI,OACI,yBAAKtC,UAAU,WACb,qFACA,gDCKKuC,MATf,WACI,OACI,yBAAKvC,UAAU,WACb,mEACA,sDCKKwC,MATf,WACI,OACI,yBAAKxC,UAAU,WACb,6DACA,gDCKKyC,MATf,WACI,OACI,yBAAKzC,UAAU,WACb,iJACA,8DC2DK0C,MAjCf,WACI,OACI,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MAGA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MAGA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QC1BKC,MAvBf,WACI,OACI,kBAAC,IAAD,CAEEC,WAAc,gBACdC,eAAkB,IAElBC,OAAQ,YAA4B,EAAzBC,MAAyB,EAAlBC,YACd,OACI,kBAAC,IAAcC,QAAf,KAEE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,WCZLC,MARf,WACE,OACE,yBAAKlD,UAAU,OACb,kBAAC,EAAD,QCIcmD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASV,OAAO,kBAAC,EAAD,MAASW,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6397feaa.chunk.js","sourcesContent":["import React from 'react';\n\nfunction SectionUbiquitousLanguage () {\n  return (\n      <div className=\"section\">\n        <p>ユビキタス言語</p>\n        <p>UBIQUITOUS LANGUAGE</p>\n      </div>\n  );\n}\n\nexport default SectionUbiquitousLanguage;\n","import React from 'react';\n\nfunction SectionDomainDrivenDesign () {\n    return (\n        <div className=\"section\">\n          <p>ドメイン駆動設計</p>\n          <p>DOMAIN DRIVEN DESIGN</p>\n        </div>\n    );\n}\n\nexport default SectionDomainDrivenDesign;\n","import React from 'react';\n\n/* ******************************** */\n/* 第1部 ドメインモデルを機能させる */\n/* ******************************** */\n\n// 第03章 ドメインとモデルを結びつける\nimport SectionUbiquitousLanguage from './SectionUbiquitousLanguage';\nimport SectionDomainDrivenDesign from './SectionDomainDrivenDesign';\n\nfunction Section1 () {\n    return (\n        <>\n          <SectionUbiquitousLanguage />\n          <SectionDomainDrivenDesign />\n        </>\n    );\n}\n\nexport default Section1;\n","import React from 'react';\n\nfunction SectionLayeredArchitecture () {\n    return (\n        <div className=\"section\">\n          <p>レイヤー化アーキテクチャ</p>\n          <p>LAYERED ARCHITECTURE</p>\n        </div>\n    );\n}\n\nexport default SectionLayeredArchitecture;\n","import React from 'react';\n\nfunction SectionEntities () {\n    return (\n        <div className=\"section\">\n          <p>エンティティ</p>\n          <p>ENTITIES</p>\n        </div>\n    );\n}\n\nexport default SectionEntities;\n","import React from 'react';\n\nfunction SectionValueObjects () {\n    return (\n        <div className=\"section\">\n          <p>値オブジェクト</p>\n          <p>VALUE OBJECTS</p>\n        </div>\n    );\n}\n\nexport default SectionValueObjects;\n","import React from 'react';\n\nfunction SectionServices () {\n    return (\n        <div className=\"section\">\n          <p>サービス</p>\n          <p>SERVICES</p>\n        </div>\n    );\n}\n\nexport default SectionServices;\n","import React from 'react';\n\nfunction SectionModules () {\n    return (\n        <div className=\"section\">\n          <p>モジュール</p>\n          <p>MODULES</p>\n        </div>\n    );\n}\n\nexport default SectionModules;\n","import React from 'react';\n\nfunction SectionAggregates () {\n    return (\n        <div className=\"section\">\n          <p>集約</p>\n          <p>Aggregates</p>\n        </div>\n    );\n}\n\nexport default SectionAggregates;\n","import React from 'react';\n\nfunction SectionFactories () {\n    return (\n        <div className=\"section\">\n          <p>ファクトリ</p>\n          <p>FACTORIES</p>\n        </div>\n    );\n}\n\nexport default SectionFactories;\n","import React from 'react';\n\nfunction SectionRepositories () {\n    return (\n        <div className=\"section\">\n          <p>リポジトリ</p>\n          <p>REPOSITORIES</p>\n        </div>\n    );\n}\n\nexport default SectionRepositories;\n","import React from 'react';\n\n/* ****************************** */\n/* 第2部 モデル駆動設計の構成要素 */\n/* ****************************** */\n\n// 第04章 ドメインを隔離する\nimport SectionLayeredArchitecture from './SectionLayeredArchitecture';\n// 第05章 ソフトウェアで表現されたモデル\nimport SectionEntities from './SectionEntities';\nimport SectionValueObjects from './SectionValueObjects';\nimport SectionServices from './SectionServices';\nimport SectionModules from './SectionModules';\n// 第06章 ドメイン・オブジェクトのライフサイクル\nimport SectionAggregates from './SectionAggregates';\nimport SectionFactories from './SectionFactories';\nimport SectionRepositories from './SectionRepositories';\n\nfunction Section2 () {\n    return (\n        <>\n          <SectionLayeredArchitecture />\n          <SectionEntities />\n          <SectionValueObjects />\n          <SectionServices />\n          <SectionModules />\n          <SectionAggregates />\n          <SectionFactories />\n          <SectionRepositories />\n        </>\n    );\n}\n\nexport default Section2;\n","import React from 'react';\n\nfunction SectionSpecification () {\n    return (\n        <div className=\"section\">\n          <p>仕様</p>\n          <p>SPECIFICATION</p>\n        </div>\n    );\n}\n\nexport default SectionSpecification;\n","import React from 'react';\n\nfunction SectionIntentionRevealingInterfaces () {\n    return (\n        <div className=\"section\">\n          <p>意図の明白なインターフェース</p>\n          <p>INTENTION REVEALING INTERFACES</p>\n        </div>\n    );\n}\n\nexport default SectionIntentionRevealingInterfaces;\n","import React from 'react';\n\nfunction SectionSideEffectFreeFunctions () {\n    return (\n        <div className=\"section\">\n          <p>副作用のない関数</p>\n          <p>SIDE-EFFECT FREE FUNCTIONS</p>\n        </div>\n    );\n}\n\nexport default SectionSideEffectFreeFunctions;\n","import React from 'react';\n\nfunction SectionAssertions () {\n    return (\n        <div className=\"section\">\n          <p>表明</p>\n          <p>ASSERTIONS</p>\n        </div>\n    );\n}\n\nexport default SectionAssertions;\n","import React from 'react';\n\nfunction SectionConceptualContours () {\n    return (\n        <div className=\"section\">\n          <p>概念の輪郭</p>\n          <p>CONCEPTUAL CONTOURS</p>\n        </div>\n    );\n}\n\nexport default SectionConceptualContours;\n","import React from 'react';\n\nfunction SectionStandaloneClasses () {\n    return (\n        <div className=\"section\">\n          <p>独立したクラス</p>\n          <p>STANDALONE CLASSES</p>\n        </div>\n    );\n}\n\nexport default SectionStandaloneClasses;\n","import React from 'react';\n\nfunction SectionCompositeOfDesignPattern () {\n    return (\n        <div className=\"section\">\n          <p>コンポジット</p>\n          <p>COMPOSITE OF DESIGN PATTERN</p>\n        </div>\n    );\n}\n\nexport default SectionCompositeOfDesignPattern;\n","import React from 'react';\n\n/* **************************************** */\n/* 第3部 より深い洞察へ向うリファクタリング */\n/* **************************************** */\n\n// 第09章 暗黙的な概念を明示的にする\nimport SectionSpecification from './SectionSpecification';\n// 第10章 しなやかな設計\nimport SectionIntentionRevealingInterfaces from './SectionIntentionRevealingInterfaces';\nimport SectionSideEffectFreeFunctions from './SectionSideEffectFreeFunctions';\nimport SectionAssertions from './SectionAssertions';\nimport SectionConceptualContours from './SectionConceptualContours';\nimport SectionStandaloneClasses from './SectionStandaloneClasses';\nimport SectionClosureOfOperations from './SectionClosureOfOperations';\n// 第12章 デザインパターンをモデルに関係づける\nimport SectionStrategyOfDesignPattern from './SectionStrategyOfDesignPattern';\nimport SectionCompositeOfDesignPattern from './SectionCompositeOfDesignPattern';\n\nfunction Section3 () {\n    return (\n        <>\n          <SectionSpecification />\n\n\n          <SectionIntentionRevealingInterfaces />\n          <SectionSideEffectFreeFunctions />\n          <SectionAssertions />\n          <SectionConceptualContours />\n\n\n          <SectionStandaloneClasses />\n          <SectionCompositeOfDesignPattern />\n        </>\n    );\n}\n\nexport default Section3;\n","import React from 'react';\n\nfunction SectionBoundedContext () {\n    return (\n        <div className=\"section\">\n          <p>境界づけられたコンテキスト</p>\n          <p>BOUNDED CONTEXT</p>\n        </div>\n    );\n}\n\nexport default SectionBoundedContext;\n","import React from 'react';\n\nfunction SectionContinuousIntegration () {\n    return (\n        <div className=\"section\">\n          <p>継続的な統合</p>\n          <p>CONTINUOUS INTEGRATION</p>\n        </div>\n    );\n}\n\nexport default SectionContinuousIntegration;\n","import React from 'react';\n\nfunction SectionContextMap () {\n    return (\n        <div className=\"section\">\n          <p>コンテキスト・マップ</p>\n          <p>CONTEXT MAP</p>\n        </div>\n    );\n}\n\nexport default SectionContextMap;\n","import React from 'react';\n\nfunction SectionSharedKernel () {\n    return (\n        <div className=\"section\">\n          <p>共有カーネル</p>\n          <p>SHARED KERNEL</p>\n        </div>\n    );\n}\n\nexport default SectionSharedKernel;\n","import React from 'react';\n\nfunction SectionCostomerSupplierDevelopmentTeams () {\n    return (\n        <div className=\"section\">\n          <p>顧客/供給者の開発チーム</p>\n          <p>COSTOMER / SUPPLIER DEVELOPMENT TEAMS</p>\n        </div>\n    );\n}\n\nexport default SectionCostomerSupplierDevelopmentTeams;\n","import React from 'react';\n\nfunction SectionConformist () {\n    return (\n        <div className=\"section\">\n          <p>順応者</p>\n          <p>CONFORMIST</p>\n        </div>\n    );\n}\n\nexport default SectionConformist;\n","import React from 'react';\n\nfunction SectionAntiCorruptionLayer () {\n    return (\n        <div className=\"section\">\n          <p>腐敗防止層</p>\n          <p>ANTI-CORRUPTION LAYER</p>\n        </div>\n    );\n}\n\nexport default SectionAntiCorruptionLayer;\n","import React from 'react';\n\nfunction SectionSeparateWays () {\n    return (\n        <div className=\"section\">\n          <p>別々の道</p>\n          <p>SEPARATE WAYS</p>\n        </div>\n    );\n}\n\nexport default SectionSeparateWays;\n","import React from 'react';\n\nfunction SectionOpenHostService () {\n    return (\n        <div className=\"section\">\n          <p>公開ホストサービス</p>\n          <p>OPEN HOST SERVICE</p>\n        </div>\n    );\n}\n\nexport default SectionOpenHostService;\n","import React from 'react';\n\nfunction SectionPublishedLanguage () {\n    return (\n        <div className=\"section\">\n          <p>公表された言語</p>\n          <p>PUBLISHED LANGUAGE</p>\n        </div>\n    );\n}\n\nexport default SectionPublishedLanguage;\n","import React from 'react';\n\nfunction SectionCoreDomain () {\n    return (\n        <div className=\"section\">\n          <p>コア・ドメイン</p>\n          <p>CORE DOMAIN</p>\n        </div>\n    );\n}\n\nexport default SectionCoreDomain;\n","import React from 'react';\n\nfunction SectionGenericSubDomains () {\n    return (\n        <div className=\"section\">\n          <p>汎用サブドメイン</p>\n          <p>GENERIC SUBDOMAINS</p>\n        </div>\n    );\n}\n\nexport default SectionGenericSubDomains;\n","import React from 'react';\n\nfunction SectionDomainVisionStatement () {\n    return (\n        <div className=\"section\">\n          <p>ドメイン・ビジョン声明文</p>\n          <p>DOMAIN VISION STATEMENT</p>\n        </div>\n    );\n}\n\nexport default SectionDomainVisionStatement;\n","import React from 'react';\n\nfunction SectionHighlightedCore () {\n    return (\n        <div className=\"section\">\n          <p>強調されたコア</p>\n          <p>HIGHLIGHTED CORE</p>\n        </div>\n    );\n}\n\nexport default SectionHighlightedCore;\n","import React from 'react';\n\nfunction SectionCohesiveMechanisms () {\n    return (\n        <div className=\"section\">\n          <p>凝縮されたメカニズム</p>\n          <p>COHESIVE MECHANISMS</p>\n        </div>\n    );\n}\n\nexport default SectionCohesiveMechanisms;\n","import React from 'react';\n\nfunction SectionSegregatedCore () {\n    return (\n        <div className=\"section\">\n          <p>隔離されたコア</p>\n          <p>SEGREGATED CORE</p>\n        </div>\n    );\n}\n\nexport default SectionSegregatedCore;\n","import React from 'react';\n\nfunction SectionAbstractCore () {\n    return (\n        <div className=\"section\">\n          <p>抽象化されたコア</p>\n          <p>ABSTRACT CORE</p>\n        </div>\n    );\n}\n\nexport default SectionAbstractCore;\n","import React from 'react';\n\nfunction SectionEvolvingOrder () {\n    return (\n        <div className=\"section\">\n          <p>進化する秩序</p>\n          <p>EVOLVING ORDER</p>\n        </div>\n    );\n}\n\nexport default SectionEvolvingOrder;\n","import React from 'react';\n\nfunction SectionSystemMetaphor () {\n    return (\n        <div className=\"section\">\n          <p>システムのメタファ</p>\n          <p>SYSTEM METAPHOR</p>\n        </div>\n    );\n}\n\nexport default SectionSystemMetaphor;\n","import React from 'react';\n\nfunction SectionResponsibleityLayers () {\n    return (\n        <div className=\"section\">\n          <p>職責のレイヤ</p>\n          <p>RESPONSIBLEITY LAYERS</p>\n        </div>\n    );\n}\n\nexport default SectionResponsibleityLayers;\n","import React from 'react';\n\nfunction SectionKnowledgeLevel () {\n    return (\n        <div className=\"section\">\n          <p>知識レベル</p>\n          <p>KNOWLEDGE LEVEL</p>\n        </div>\n    );\n}\n\nexport default SectionKnowledgeLevel;\n","import React from 'react';\n\nfunction SectionPluggableComponentFramework () {\n    return (\n        <div className=\"section\">\n          <p>着脱可能コンポーネントのフレームワーク</p>\n          <p>PLUGGABLE COMPONEN TFRAMEWORK</p>\n        </div>\n    );\n}\n\nexport default SectionPluggableComponentFramework;\n","import React from 'react';\n\n/* **************** */\n/* 第4部 戦略的設計 */\n/* **************** */\n\n// 第14章 モデルの整合性を維持する。\nimport SectionBoundedContext from './SectionBoundedContext';\nimport SectionContinuousIntegration from './SectionContinuousIntegration';\nimport SectionContextMap from './SectionContextMap';\nimport SectionSharedKernel from './SectionSharedKernel';\nimport SectionCostomerSupplierDevelopmentTeams from './SectionCostomerSupplierDevelopmentTeams';\nimport SectionConformist from './SectionConformist';\nimport SectionAntiCorruptionLayer from './SectionAntiCorruptionLayer';\nimport SectionSeparateWays from './SectionSeparateWays';\nimport SectionOpenHostService from './SectionOpenHostService';\nimport SectionPublishedLanguage from './SectionPublishedLanguage';\n// 第15章 蒸留\nimport SectionCoreDomain from './SectionCoreDomain';\nimport SectionGenericSubDomains from './SectionGenericSubDomains';\nimport SectionDomainVisionStatement from './SectionDomainVisionStatement';\nimport SectionHighlightedCore from './SectionHighlightedCore';\nimport SectionCohesiveMechanisms from './SectionCohesiveMechanisms';\nimport SectionSegregatedCore from './SectionSegregatedCore';\nimport SectionAbstractCore from './SectionAbstractCore';\n// 第16章 大規模な構造\nimport SectionEvolvingOrder from './SectionEvolvingOrder';\nimport SectionSystemMetaphor from './SectionSystemMetaphor';\nimport SectionResponsibleityLayers from './SectionResponsibleityLayers';\nimport SectionKnowledgeLevel from './SectionKnowledgeLevel';\nimport SectionPluggableComponentFramework from './SectionPluggableComponentFramework';\n\nfunction Section4 () {\n    return (\n        <>\n          <SectionBoundedContext />\n          <SectionContinuousIntegration />\n          <SectionContextMap />\n          <SectionSharedKernel />\n          <SectionCostomerSupplierDevelopmentTeams />\n          <SectionConformist />\n          <SectionAntiCorruptionLayer />\n          <SectionSeparateWays />\n          <SectionOpenHostService />\n          <SectionPublishedLanguage />\n\n\n          <SectionCoreDomain />\n          <SectionGenericSubDomains />\n          <SectionDomainVisionStatement />\n          <SectionHighlightedCore />\n          <SectionCohesiveMechanisms />\n          <SectionSegregatedCore />\n          <SectionAbstractCore />\n\n\n          <SectionEvolvingOrder />\n          <SectionSystemMetaphor />\n          <SectionResponsibleityLayers />\n          <SectionKnowledgeLevel />\n          <SectionPluggableComponentFramework />\n        </>\n    );\n}\n\nexport default Section4;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport ReactFullpage from '@fullpage/react-fullpage';\n\n\nimport Section1 from './Section1';\nimport Section2 from './Section2';\nimport Section3 from './Section3';\nimport Section4 from './Section4';\n\nfunction PageHome () {\n    return (\n        <ReactFullpage\n        //fullpage options\n          licenseKey = {'YOUR_KEY_HERE'}\n          scrollingSpeed = {1000} /* Options here */\n\n          render={({ state, fullpageApi }) => {\n              return (\n                  <ReactFullpage.Wrapper>\n\n                    <Section1 />\n                    <Section2 />\n                    <Section3 />\n                    <Section4 />\n\n                  </ReactFullpage.Wrapper>\n              );\n          }}\n        />\n    );\n}\n\nexport default PageHome;\n","import React from 'react';\nimport './App.css';\n\nimport PageHome from './pages/PageHome';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PageHome />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}